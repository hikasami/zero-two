import disnake
from disnake.ext import commands
from random import randint, random
from disnake import Option
import sqlite3
import os 
import sys
import typing
from datetime import datetime


conn = sqlite3.connect('bans.db')
c = conn.cursor()

conn = sqlite3.connect('warn.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS warnings
             (user_id INTEGER PRIMARY KEY, num_warnings INTEGER)''')

conn = sqlite3.connect('black-list-words.db')
c = conn.cursor()

c.execute("CREATE TABLE IF NOT EXISTS bad_words (word TEXT)")



class admins(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        

             
     
    @commands.slash_command(name="kick", description="–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞.")
    @commands.has_permissions(kick_members=True, administrator=True)
    async def kick_user(self, ctx: disnake.ApplicationCommandInteraction, user: disnake.Member, reason: str = None):
        await user.kick(reason=reason)
        embed=disnake.Embed(color=0x7788ff)
        embed.add_field(name="Kick", value=f"{ctx.author.mention} –∫–∏–∫–Ω—É–ª–∞ {user.mention} –∏–∑ {ctx.guild} —Å–µ—Ä–≤–µ—Ä–∞")
        await ctx.send(embed=embed, ephemeral=True) 


    @commands.slash_command(name='clear', description='–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç')
    async def clear(self, ctx: disnake.ApplicationCommandInteraction, amount: int):
        if not ctx.author.guild_permissions.manage_messages:
            await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.')
            return
        if amount > 1000:
            await ctx.send('–ö–∏—Å–∫–∏—Å –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –±–æ–ª—å—à–µ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑.')
            return
        deleted = await ctx.channel.purge(limit=amount)
        embed=disnake.Embed(color=0x7788ff)
        embed.add_field(name="–û—á–∏—Å—Ç–∏–ª–∞ —á–∞—Ç", value=f"–£–¥–∞–ª–∏–ª–∞ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π üòä", inline=False)
        await ctx.send(embed=embed, ephemeral=True)


    
    @commands.slash_command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    @commands.has_permissions(ban_members=True, administrator=True)
    async def ban_user(self, ctx: disnake.ApplicationCommandInteraction, user: disnake.Member, reason: str = None):
        conn = sqlite3.connect('bans.db')
        c = conn.cursor()
        c.execute("SELECT user_id FROM bans WHERE user_id=?", (user.id,))
        banned_user = c.fetchone()  
        if banned_user:
            embed = disnake.Embed(title="–ë–∞–Ω", description=f"{user.mention} –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω.", color=0x7788ff)
        else:
            await user.ban(reason=reason)
            c.execute("INSERT INTO bans (user_id, username, reason) VALUES (?, ?, ?)", (user.id, user.name, reason))
            conn.commit()
            embed = disnake.Embed(title="–ë–∞–Ω", description=f"{user.mention} –Ø –∑–∞–±–∞–Ω–∏–ª–∞ —ç—Ç—É —Ö–∞–º–∫—É.üò§", color=0x7788ff)    
        await ctx.send(embed=embed, ephemeral=True) 


    @commands.slash_command(name="unban", description="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    @commands.has_permissions(ban_members=True, administrator=True)
    async def unban_user(self, ctx: disnake.ApplicationCommandInteraction, user: disnake.User, reason: str = None):
        banned_users = await ctx.guild.bans()
        user_name, user_discriminator = user.name, user.discriminator
        for banned_entry in banned_users:
            banned_user = banned_entry.user
            if (banned_user.name, banned_user.discriminator) == (user_name, user_discriminator):
                await ctx.guild.unban(banned_user, reason=reason)
                c.execute("DELETE FROM bans WHERE user_id=?", (banned_user.id,))
                conn.commit()
                embed = disnake.Embed(title="–†–∞–∑–±–∞–Ω", description=f"{banned_user.mention} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω.", color=0x7788ff)
                await ctx.send(embed=embed, ephemeral=True)
                return
        embed = disnake.Embed(title="–û—à–∏–±–∫–∞", description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö.", color=0xff0000)
        await ctx.send(embed=embed, ephemeral=True)


    
    @commands.slash_command(name="message_bot", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –ü–æ–ª–∏–Ω—ã.")
    @commands.has_permissions(administrator=True)
    async def echo(self, ctx: disnake.ApplicationCommandInteraction, channel: disnake.TextChannel, *, message: str):
        message = message.replace("-", "\n")
        embed=disnake.Embed(color=0x7788ff)
        embed.add_field(name="", value=message, inline=False)
        await channel.send(embed=embed) 





    @commands.slash_command(name='join', description='–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª')
    @commands.has_permissions(administrator=True)
    async def join(ctx: disnake.ApplicationCommandInteraction):
        if not ctx.author.voice:
            embed = disnake.Embed(
                color=0xe21212,
                title="–û—à–∏–±–∫–∞",
                description="–¢—ã –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã"
            )
            await ctx.send(embed=embed, ephemeral=True)
            return

        channel = ctx.author.voice.channel
        await channel.connect()
        embed = disnake.Embed(
            color=0x7788ff,
            title="–ì–æ—Ç–æ–≤–æ",
            description=f"–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∞—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É {channel.name}"
        )
        await ctx.send(embed=embed, ephemeral=True)

        voice_channel = ctx.author.voice.channel
        embed = disnake.Embed(color=0x7788ff)
        embed.add_field(name="voice", value=voice_channel.name, inline=False)
        await ctx.send(embed=embed, ephemeral=True)





    @commands.slash_command(name='leave', description='–í—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
    @commands.has_permissions(administrator=True)
    async def leave(ctx: disnake.ApplicationCommandInteraction):
        if not ctx.guild.voice_client:
            embed = disnake.Embed(
                color=0x7788ff,
                title="–û—à–∏–±–∫–∞",
                description="–Ø –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ"
            )
            await ctx.response.send_message(embed=embed, ephemeral=True)
            return

        await ctx.guild.voice_client.disconnect()
        embed = disnake.Embed(
            color=0x7788ff,
            title="–ì–æ—Ç–æ–≤–æ",
            description="–£—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–∏–ª–∞—Å—å –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
        )
        await ctx.response.send_message(embed=embed, ephemeral=True)



    @commands.slash_command(name='stay', description='–û—Å—Ç–∞–≤–∞—Ç—å—Å—è –ü–æ–ª–∏–Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ')
    @commands.has_permissions(administrator=True)
    async def stay(ctx):
        if not ctx.author.voice:
            embed = disnake.Embed(
                color=0x7788ff,
                title="–û—à–∏–±–∫–∞",
                description="–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
            )
            await ctx.send(embed=embed, ephemeral=True)
            return

        vc = ctx.author.voice.channel
        voice_client = ctx.guild.voice_client
        if voice_client and voice_client.is_connected():
            await voice_client.move_to(vc)
            embed = disnake.Embed(
                color=0x7788ff,
                title="–ì–æ—Ç–æ–≤–æ",
                description=f'–Ø –æ—Å—Ç–∞–Ω—É—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ "{vc.name}" –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –º–µ–Ω—è –Ω–µ –ø–æ–ø—Ä–æ—Å—è—Ç –≤—ã–π—Ç–∏. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ /leave.'
            )
        else:
            voice_client = await vc.connect()
            embed = disnake.Embed(
                color=0x7788ff,
                title="–ì–æ—Ç–æ–≤–æ",
                description="–£–¥–∞—á–Ω–æ –∑–∞—à–ª–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª."
            )

        await ctx.send(embed=embed, ephemeral=True)





    @commands.slash_command(name='restart', description='–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞')
    @commands.has_permissions(administrator=True)
    async def restart(ctx: disnake.ApplicationCommandInteraction):
        await ctx.response.defer()

        try:
            os.execv(sys.executable, ['python'] + [arg for arg in sys.argv if arg != '--handle-sls'])
        except Exception as e:
            embed = disnake.Embed(title='–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞', color=0x7788ff)
            await ctx.send(embed=embed, ephemeral=True)
        else:
            embed = disnake.Embed(title='–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ', color=0x7788ff)
            await ctx.send(embed=embed, ephemeral=True)

            
        



    @commands.slash_command(name='create_role', description='–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏')
    @commands.has_permissions(administrator=True)
    async def create_role(ctx, name: str):
        guild = ctx.guild
        role = await guild.create_role(name=name)
        embed = disnake.Embed(
            title=f'–†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞',
            description=f'–ù–æ–≤–∞—è —Ä–æ–ª—å {role.mention} –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞!',
            color=0x7788ff
        )
        await ctx.send(embed=embed, ephemeral=True)



    @commands.slash_command(name='assign_role', description='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    @commands.has_permissions(administrator=True)
    async def assign_role(ctx, role: disnake.Role, member: disnake.Member):
        await member.add_roles(role)
        embed = disnake.embeds.Embed(
            title='–†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞',
            description=f'–ö–∏—Å—É–Ω–µ {member.mention} –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å {role.mention}!',
            color=0x7788ff
        )
        await ctx.send(embed=embed, ephemeral=True)



    @commands.slash_command(name='remove_role', description='–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    @commands.has_permissions(administrator=True)
    async def remove_role(ctx, role: disnake.Role, member: disnake.Member):
        await member.remove_roles(role)
        embed = disnake.embeds.Embed(
            title='–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞',
            description=f'–£ –∫–∏—Å—É–Ω–∏ {member.mention} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å {role.mention}!',
            color=0x7788ff
        )
        await ctx.send(embed=embed, ephemeral=True)



    @commands.slash_command(name="setnick", description="–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫—É.")
    @commands.has_permissions(administrator=True)
    async def set_nickname(self, ctx, member: disnake.Member, new_nickname: str):
        await member.edit(nick=new_nickname)
        embed = disnake.Embed(
            title="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ :pen_ballpoint:",
            description=f"–ù–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_nickname}.",
            color=0x7788ff
        )
        await ctx.send(embed=embed, ephemeral=True)


    @commands.slash_command(name="setcolorrole", description="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —Ä–æ–ª–∏")
    @commands.has_permissions(administrator=True)
    async def set_color_role(ctx, role: disnake.Role, color: str = None):
        if color is not None:
            try:
                color = disnake.Color(int(color.lstrip('#'), 16))
            except ValueError:
                embed = disnake.Embed(title='–û—à–∏–±–∫–∞', description='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞. –¶–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –≤ HEX-—Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, #ff0000)', color=0xff0000)
                await ctx.send(embed=embed, ephemeral=True)
                return
        else:
            color = disnake.Color.random()

        await role.edit(color=color)

        embed = disnake.Embed(title='–¶–≤–µ—Ç –∏–∑–º–µ–Ω–µ–Ω', color=0x7788ff)
        embed.add_field(name='–†–æ–ª—å', value=role.mention)
        embed.add_field(name='–¶–≤–µ—Ç', value=f'#{color.value:06x}')

        await ctx.send(embed=embed, ephemeral=True)


    @commands.guild_only()
    @commands.slash_command(
        name="voting", 
        description="–ü—Ä–æ–≤–µ—Å—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ",
        options=[
            disnake.Option("text", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç!", required=True)
        ]
    )
    @commands.has_permissions(administrator=True)
    async def poll(self, ctx, *, text):
        await ctx.channel.purge(limit=1)
        poll = disnake.Embed(description=text, colour=randint(0, 0x7788ff))
        poll.timestamp = datetime.utcnow()
        msg = await ctx.channel.send(embed=poll)
        await msg.add_reaction("‚úî")
        await msg.add_reaction("‚ùå")



    @commands.slash_command(name="send-dm", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ª—Å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
    @commands.has_permissions(administrator=True)
    @commands.guild_only()
    async def send(self, ctx, member: disnake.Member, *, text):
        embed = disnake.Embed(title="–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≤–∞–º!", color=disnake.Color.dark_red())
        embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ:", value=text)
        embed.set_thumbnail(url=ctx.bot.user.display_avatar)
        await member.send(embed=embed)

        success_embed = disnake.Embed(title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
                                      description=f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —É—á–∞—Å—Ç–Ω–∏–∫—É {member.mention}",
                                      color=0x7788ff)
        await ctx.send(embed=success_embed, ephemeral=True)

def setup(bot: commands.Bot):
    bot.add_cog(admins(bot))