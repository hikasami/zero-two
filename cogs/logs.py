import disnake
from disnake.ext import commands


class Logs(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        for guild in self.bot.guilds:
            overwrites = {
                guild.default_role: disnake.PermissionOverwrite(read_messages=False),
                guild.me: disnake.PermissionOverwrite(read_messages=True, read_message_history=True)
            }

            category = disnake.utils.get(guild.categories, name="–õ–æ–≥–∏")
            if not category:
                category = await guild.create_category("–õ–æ–≥–∏")

            admin_channel = disnake.utils.get(category.text_channels, name="admin-logs")
            if not admin_channel:
                admin_channel = await category.create_text_channel("admin-logs", overwrites=overwrites)

    @commands.Cog.listener()
    async def on_member_join(self, member):
        channel = disnake.utils.get(member.guild.text_channels, name="admin-logs")
        if channel:
            embed = disnake.Embed(description=f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.", color=0xCD853F)
            await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_member_remove(self, member):
        channel = disnake.utils.get(member.guild.text_channels, name="admin-logs")
        if channel:
            embed = disnake.Embed(description=f"üò¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä.", color=0xCD853F)
            await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_member_update(self, before, after):
        if before.roles != after.roles:
            role_changes = []
            for role in before.roles:
                if role not in after.roles:
                    role_changes.append(f"üî¥ –£–±—Ä–∞–Ω–∞ —Ä–æ–ª—å {role.mention}")
            for role in after.roles:
                if role not in before.roles:
                    role_changes.append(f"üü¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å {role.mention}")
            if role_changes:
                channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
                if channel:
                    role_changes_str = "\n".join(role_changes)
                    executor = None
                    for role in before.roles:
                        if role not in after.roles:
                            changes = await after.guild.audit_logs(limit=1, action=disnake.AuditLogAction.member_role_update).flatten()
                            executor = changes[0].user.mention if changes else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                            break
                    author = after
                    embed = disnake.Embed(description=f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {author.mention} –∏–∑–º–µ–Ω–∏–ª —Ä–æ–ª–∏:\n{role_changes_str}\n\nüë§ –í—ã–ø–æ–ª–Ω–∏–ª: {executor}", color=0xCD853F)
                    await channel.send(embed=embed)

        if before.display_name != after.display_name:
            channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
            if channel:
                executor = before.guild.me.mention
                author = after
                embed = disnake.Embed(description=f"üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {author.mention} –∏–∑–º–µ–Ω–∏–ª –Ω–∏–∫–Ω–µ–π–º: {before.display_name} -> {after.display_name}\nüë§ –í—ã–ø–æ–ª–Ω–∏–ª: {executor}", color=0xCD853F)
                await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_user_update(self, before, after):
        if before.avatar.url != after.avatar.url:
            channel = disnake.utils.get(after.mutual_guilds[0].text_channels, name="admin-logs")
            if channel:
                embed = disnake.Embed(description=f"üì∑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {after.mention} –∏–∑–º–µ–Ω–∏–ª –∞–≤–∞—Ç–∞—Ä–∫—É.", color=0xCD853F)
                await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_message_delete(self, message):
        if message.guild:
            channel = disnake.utils.get(message.guild.text_channels, name="admin-logs")
            if channel:
                author = message.author
                deleted_messages = await message.channel.purge(limit=100, before=message, check=lambda m: m.author == author)
                deleted_messages_content = "\n".join([f"{m.content} ({m.created_at})" for m in deleted_messages])
                embed = disnake.Embed(description=f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.author.mention} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.content}\n\nüìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(deleted_messages)}\n\nüìù –£–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n{deleted_messages_content}", color=0xCD853F)
                await channel.send(embed=embed)

                log_channel = disnake.utils.get(message.guild.text_channels, name="admin-logs")
                if log_channel:
                    embed = disnake.Embed(description=f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.author.mention} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.content}\n\nüìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(deleted_messages)}", color=0xCD853F)
                    await log_channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        if before.channel != after.channel:
            channel = disnake.utils.get(member.guild.text_channels, name="admin-logs")
            if channel:
                if before.channel:
                    embed = disnake.Embed(description=f"üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {before.channel.name}.", color=0xCD853F)
                    await channel.send(embed=embed)
                if after.channel:
                    embed = disnake.Embed(description=f"üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É {after.channel.name}.", color=0xCD853F)
                    await channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_create(self, channel):
        if isinstance(channel, disnake.TextChannel):
            log_channel = disnake.utils.get(channel.guild.text_channels, name="admin-logs")
            if log_channel:
                embed = disnake.Embed(description=f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª: {channel.mention}\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {channel.guild.me.mention}", color=0xCD853F)
                await log_channel.send(embed=embed)
        elif isinstance(channel, disnake.VoiceChannel):
            log_channel = disnake.utils.get(channel.guild.text_channels, name="admin-logs")
            if log_channel:
                embed = disnake.Embed(description=f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª: {channel.mention}\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {channel.guild.me.mention}", color=0xCD853F)
                await log_channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_delete(self, channel):
        if isinstance(channel, disnake.TextChannel):
            log_channel = disnake.utils.get(channel.guild.text_channels, name="admin-logs")
            if log_channel:
                executor = channel.guild.me.mention
                embed = disnake.Embed(description=f"‚ùå –£–¥–∞–ª–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª: {channel.mention}\nüë§ –í—ã–ø–æ–ª–Ω–∏–ª: {executor}", color=0xCD853F)
                await log_channel.send(embed=embed)
        elif isinstance(channel, disnake.VoiceChannel):
            log_channel = disnake.utils.get(channel.guild.text_channels, name="admin-logs")
            if log_channel:
                executor = channel.guild.me.mention
                embed = disnake.Embed(description=f"‚ùå –£–¥–∞–ª–µ–Ω –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª: {channel.mention}\nüë§ –í—ã–ø–æ–ª–Ω–∏–ª: {executor}", color=0xCD853F)
                await log_channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_guild_channel_update(self, before, after):
        if isinstance(before, disnake.TextChannel) and isinstance(after, disnake.TextChannel):
            if before.name != after.name:
                log_channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
                if log_channel:
                    embed = disnake.Embed(description=f"üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {before.guild.me.mention} –∏–∑–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {before.mention} -> {after.mention}", color=0xCD853F)
                    await log_channel.send(embed=embed)

        elif isinstance(before, disnake.VoiceChannel) and isinstance(after, disnake.VoiceChannel):
            if before.name != after.name:
                log_channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
                if log_channel:
                    embed = disnake.Embed(description=f"üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {before.guild.me.mention} –∏–∑–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {before.mention} -> {after.mention}", color=0xCD853F)
                    await log_channel.send(embed=embed)

        elif isinstance(before, disnake.TextChannel) and isinstance(after, disnake.VoiceChannel):
            log_channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
            if log_channel:
                embed = disnake.Embed(description=f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {before.guild.me.mention} –∏–∑–º–µ–Ω–∏–ª —Ç–∏–ø –∫–∞–Ω–∞–ª–∞: –¢–µ–∫—Å—Ç–æ–≤—ã–π {before.mention} -> –ì–æ–ª–æ—Å–æ–≤–æ–π {after.mention}", color=0xCD853F)
                await log_channel.send(embed=embed)

        elif isinstance(before, disnake.VoiceChannel) and isinstance(after, disnake.TextChannel):
            log_channel = disnake.utils.get(before.guild.text_channels, name="admin-logs")
            if log_channel:
                embed = disnake.Embed(description=f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {before.guild.me.mention} –∏–∑–º–µ–Ω–∏–ª —Ç–∏–ø –∫–∞–Ω–∞–ª–∞: –ì–æ–ª–æ—Å–æ–≤–æ–π {before.mention} -> –¢–µ–∫—Å—Ç–æ–≤—ã–π {after.mention}", color=0xCD853F)
                await log_channel.send(embed=embed)

def setup(bot):
    bot.add_cog(Logs(bot))
