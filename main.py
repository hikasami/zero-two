#–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞ –∫—É–¥–∞ –≤—Å—ë –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è
import disnake
from disnake.ext import commands
import asyncio
import random
import keep_alive
import os


bot = commands.Bot(command_prefix='/', intents=disnake.Intents.all())



@bot.event
async def on_ready():
    await bot.change_presence(status=disnake.Status.online, activity=disnake.Game("Majestic RP"))



@bot.event
async def on_member_join(member):
    emb = disnake.Embed(title="–ü—Ä–∏–≤–µ—Ç –∫–∏—Å—É–Ω—åüòä –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä - –ú–∏—Ä –•–∞—á–µ–π..", color=0x9b59b6)
    emb.add_field(name= "–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ãüòä",value="–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∫–æ–º–∞–Ω–¥—ã –∫–∏—Å –Ω–∞–ø–∏—à–∏ - /help")
    await member.send(embed = emb)

    


@bot.slash_command(name="kick", description="–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞.")
@commands.has_permissions(kick_members=True)
async def kick_user(ctx: disnake.ApplicationCommandInteraction, user: disnake.Member, reason: str = None):
    await user.kick(reason=reason)
    await ctx.send(f"{user.mention} –Ø —É–¥–∞–ª–∏–ª–∞ –∫–∏—Å—É–Ω—é.üò≥")



@bot.slash_command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
@commands.has_permissions(ban_members=True)
async def ban_user(ctx: disnake.ApplicationCommandInteraction, user: disnake.Member, reason: str = None):
    await user.ban(reason=reason)
    await ctx.send(f"{user.mention} –Ø –∑–∞–±–∞–Ω–∏–ª–∞ —ç—Ç—É —Ö–∞–º–∫—É.üò§")



@bot.slash_command(name="timer", description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏.")
async def set_timer(ctx: disnake.ApplicationCommandInteraction, seconds: int):
    await ctx.send(f"Timer set for {seconds} seconds.")
    await asyncio.sleep(seconds)
    await ctx.send(f"{ctx.author.mention}, –≤—Ä–µ–º—è –≤—ã—à–ª–æ –∫–∏—Å—É–Ω—å!‚è≤")



@bot.slash_command(name="playgame", description="–ò–≥—Ä–∞ –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã")
async def play_game(ctx: disnake.ApplicationCommandInteraction, game: str):
    if game == "1":
        await ctx.send("–î–∞–≤–∞–π—Ç–µ –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞! –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ö–æ–¥: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.")
        def check(m):
            return m.author == ctx.author and m.content.lower() in ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]
        try:
            user_choice = await bot.wait_for("message", check=check, timeout=10.0)
        except asyncio.TimeoutError:
            await ctx.send("–¢—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –≤—ã–±–∏—Ä–∞–ª!üòä")
            return
        bot_choice = random.choice(["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"])
        await ctx.send(f"–ù–∞ –∫–∏—Å—É–Ω—å {bot_choice}!")
        if user_choice.content.lower() == bot_choice:
            await ctx.send("–ù–∏—á—å—è –∫–∏—Å—É–Ω—å!")
        elif user_choice.content.lower() == "–∫–∞–º–µ–Ω—å" and bot_choice == "–±—É–º–∞–≥–∞":
            await ctx.send("–¢—ã –ø–æ–±–µ–¥–∏–ª!")
        elif user_choice.content.lower() == "–Ω–æ–∂–Ω–∏—Ü—ã" and bot_choice == "–∫–∞–º–µ–Ω—å":
            await ctx.send("–¢—ã –ø–æ–±–µ–¥–∏–ª!")
        elif user_choice.content.lower() == "–±—É–º–∞–≥–∞" and bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã":
            await ctx.send("–¢—ã –ø–æ–±–µ–¥–∏–ª!")
        else:
            await ctx.send("–Ø –ø–æ–±–µ–¥–∏–ª–∞!")
    else:
        await ctx.send(f"–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å {game} –≤ —ç—Ç–æ!")



@bot.slash_command(name='help', description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')
async def help(ctx):
    embed = disnake.Embed(
        title="–í—Å–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã –ö–∏—Å—É–Ω—åüòä",
        color=0x9b59b6
        
    )
    commands_list = ["/kick", "/clear", "/ban", "/join", "/leave", "/help", "/playgame", "/time"]
    descriptions_for_commands = ["–í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞", "–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç", "–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", "–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª", "–í—ã–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã","–ü–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã —Å –±–æ—Ç–æ–º", "–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ –≤—Ä–µ–º—è"]

    for command_name, description_command in zip(commands_list, descriptions_for_commands):
        embed.add_field(
            name=command_name,
            value=description_command,
            inline=False 
        )

    await ctx.send(embed=embed)




@bot.slash_command(name='join', description='–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª')
async def join(ctx: disnake.ApplicationCommandInteraction):
    if not ctx.author.voice:
        await ctx.send('–¢—ã –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã')
        return
    voice_channel = ctx.author.voice.channel
    await voice_channel.connect()
    await ctx.send(f'–ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É "{voice_channel.name}".')

@bot.slash_command(name='leave', description='–í—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
async def leave(ctx: disnake.ApplicationCommandInteraction):
    if not ctx.guild.voice_client:
        await ctx.send('–Ø –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ')
        return

    await ctx.guild.voice_client.disconnect()
    await ctx.send('–û—Ç–∫–ª—é—á–∏–ª–∞—Å—å –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')





keep_alive.keep_alive()

bot.run(os.environ.get('TOKEN'))